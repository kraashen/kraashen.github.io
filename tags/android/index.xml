<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Android on tracing bytes</title>
    <link>https://kraashen.github.io/tags/android/</link>
    <description>Recent content in Android on tracing bytes</description>
    <generator>Hugo -- 0.127.0</generator>
    <language>en</language>
    <lastBuildDate>Thu, 23 Apr 2015 18:23:01 +0300</lastBuildDate>
    <atom:link href="https://kraashen.github.io/tags/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Component analysis of popular free Android software</title>
      <link>https://kraashen.github.io/posts/2015-04-23-component-analysis-of-popular-free-android-software/</link>
      <pubDate>Thu, 23 Apr 2015 18:23:01 +0300</pubDate>
      <guid>https://kraashen.github.io/posts/2015-04-23-component-analysis-of-popular-free-android-software/</guid>
      <description>In my previous post I took a look at some of the Privacytools.io guide&amp;rsquo;s Android applications and their respective OpenSSL versions due to an inspiration that a study gave me [1]. I also thought to continue this as a follow-up and take a look into some of the popular free Android software available on Google Play and tried to study what they are built upon.
Study set up Choose target Android applications based on common popularity among people and Play Store lists of popular free applications Collect the Android Application Packages (APK) from the Google Play Store Applications were downloaded on 2015-04-15 Use BOMTotal[2] service for scanning the application components Collect the Bill of Materials URLs, tool version identification, and software components including their respective versions Focus was on OpenSSL and getting familiar with 3rd party ad components Collect OpenSSL version history from the OpenSSL release notes and use the release intervals for &amp;lsquo;best before dates&amp;rsquo; mentioned in the original study on Privacytools.</description>
    </item>
    <item>
      <title>Follow-up: Android privacy tools best served fresh</title>
      <link>https://kraashen.github.io/posts/2015-04-14-follow-up-android-privacy-tools-best-served-fresh/</link>
      <pubDate>Tue, 14 Apr 2015 05:49:01 +0300</pubDate>
      <guid>https://kraashen.github.io/posts/2015-04-14-follow-up-android-privacy-tools-best-served-fresh/</guid>
      <description>Recently, there was a study published on OpenSSL versions used by privacy conscious software recommended in the Privacytools.io guide [1]. This study took a stance on not only the OpenSSL crypto library, but the components used by software critical to privacy and safety. The study revealed that many applications are using outdated components. As mobile world is becoming a significant part of how we communicate with people and mobile malware development in Q1 2014 continues to focus exclusively on the Android platform [2], this follow-up study focuses on Android applications mentioned in the study.</description>
    </item>
  </channel>
</rss>
